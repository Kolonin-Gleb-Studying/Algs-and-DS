
# (На вход подаются числа N и K и количество получаемых монет для каждого столбика (положительное или отрицательное), 
# выход – наибольшее количество монет, которое может собрать Марио,
# число прыжков Марио 
# номера всех столбиков, которые посетил Марио.

print("Введите кол. столбиков") # от 1 до ...
n = int(input())


prices = []
for i in range(n):
    print("Сколько монет (+ / -) на столбике " + str(i + 1) + " ?")
    prices.append(int(input()))
# print(prices)

print("Введитие максимальный прыжок") # от 1 до ...
k = int(input())

# Максимальное число монет, что соберёт Марио
wallet = prices[0] # Изначально его бюджет = сумме на 1 столбике

position = 0 # Текущее положение Марио



while position != n: # Пока не на последнем столбике
    for i in range(k): # Рассматриваю все возможные способы перемещения
        if prices[i] >= 0: # Если ближайшая ступенька не в убыток
            position += i
        else:
            # Сохранить, что это может быть выгодным
            pass
        





# def grasshopper(n):
#     grasshopper=[1, 0, 1] # База

#     for i in range(3, n+1): # n + 1 - чтобы включить n
#         grasshopper.append(grasshopper[i-2] + grasshopper[i-3]) # Рек. формула. Значения сохраняются, что ускоряет работу программы

#     return grasshopper[n]

# print(grasshopper(6))

