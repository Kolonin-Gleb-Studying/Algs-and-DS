# Восходящая реализация
# Её смысл в том, что я буду находить наилучшие способы разменять все суммы денег вплоть до запрашиваемой.
'''
1) Написать цикл, который идёт по индексам массива best_exchanges
2) Если по этому индексу хранится math.inf, то необходимо проверить, можно ли выдать эту сумму имеющимися купюрами.
-- Проверка осуществляется так: из суммы = индексу эл. вычитаем значения равные имеющимся банкнотам.
-- Если при вычитании из суммы всех купюр получается отрицательное значение, то выдать эим способом невозможно и следует оставить math.inf
--(Вспоминай дерево). Находишь минимальное кол. купюр, которыми можно получить эту сумму
3) Сохраняешь это значение по индексу.
4) Сохранённые по индексам значения можно будет использовать для определения лучших способов выдать большие суммы.
Это позволит сэкономить ресурсы.

Ход решения:
1) Я понимаю, что задача на дин. программирование, поэтому следую плану решения такого типа задач

Как написать код, который работал бы с любым кол. банкнот и их номиналом?
Мне пока такое не нужно. Главное, чтобы работал с банкнотами 10, 60, 100

# ЗАМЕТКА: Числа не кратные 10 не получится разменять!
Я не буду оптимизировать код, т.к. это не входит в задачу.

Для определения ответа по рек. формуле необх. рассмотреть кол. вариантов = 
кол. купюр разного номинала
'''
